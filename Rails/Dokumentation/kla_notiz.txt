1. Erstellen Sie eine Applikation books.
	rails new books
	cd books/

2. Nutzen Sie für diese Applikation das CSS-Framework Foundation.
	link: http://foundation.zurb.com/sites/docs/v/5.5.3/applications.html

	1) gem 'foundation-rails'		#unter Gemfile hinzufuegen
	2) bundle install				#in Konsole
	3) rails g foundation:install 	#in Konsole -> Y
	4)    <%= javascript_include_tag "vendor/modernizr" %>		#in app/views/layouts/application.html.erb	hinzufügen
	5)    <%= javascript_include_tag "application", 'data-turbolinks-track' => true %>		#muss auch vorhanden sein, ggf hinzufügen
	6) unter app/assets/stylesheets unter application.css  '*= require foundation' hinzufuegen
	7) von http://foundation.zurb.com/sites/docs/top-bar.html die topbar kopieren und unter app/views/layouts als z.B. _top_bar.html.erb speichern
	8) in die application.html.erb -> ' <%= render 'layouts/top_bar' %>' hinzufuegen

3. Erstellen Sie eine Resource books mit den Spalten: author, title, description (text), published_on (Date)
	rails g scaffold book author:string title:string description:text published_on:date

4. Stellen Sie sicher, dass beim Aufruf der Seite die index-Action der Resource Books aufgerufen wird.
	root 'books#index'

5. Binden Sie die topbar ein. Erstellen Sie einen Link in der Navigationsleiste, der auf die Index-Seite verweist.
	top_bar aus altem Projekt kopieren
	Routenfehler beim Browseraufruf provozieren
	in top_bar einmal die zeile <%= link_to "Index", root_path() %> einfügen

6.  Erstellen Sie eine untergeordnete Resource Likes, die eine Spalte quality (integer) hat. Sichern Sie ab, dass ein Like immer einem Book-Objekt zugeordnet ist.
	ganz normal scaffold
	verschachteln in der routes.rb und den ganzen anderen Kack ändern
		alles im views des untergeordneten (links)
		controller des untergeordneten
		models mit belongs_to und has_many versehen


7. Stellen Sie sicher, dass der Benutzer bei der Neuanlage/Update eines Likes eine Zahl von 1 bis 5 eingeben muss. Ansonsten wird das Formular nicht gespeichert.
	Im Model  
	  	HOW_HEARD_OPTIONS = [
  			1...5
  		]
		validates :<Spaltenname>, inclusion: { in: HOW_HEARD_OPTIONS }

8. Erstellen Sie einen View-Helper, der für ein Book-Objekt den Durchschnitt aller Likes für dieses Objekt errechnet und auf der Book-Show-Seite ausgibt. 
	App Helpers
	Wir holen uns das book und die Likes mit z.b. book.likes.each do und denn mal durchschnitt berechnen
		def mittel(book)
			i=0
			book.likes.each do |f|
				i=i+f.quality
			end
			e=i/book.likes.count
		end

